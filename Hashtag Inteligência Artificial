BASE DE DADOS COMO EXEMPLO(https://www.kaggle.com/)


!pip install pandas numpy scikit-learn

#importar base de dados
import pandas as pd

tabela = pd.read_csv("clientes.csv")
display(tabela)


#analisar os tipos de dados
display(tabela.info())

- - - - - - - - - - - - - - - - - - -

#importar da sklearn apenas a ferramenta LabelEncoder(essa ferramenta transforma colunas object"texto" em numero)
#A coluna que você deseja prever tem que esta no formato object"texto"
from sklearn.preprocessing import LabelEncoder

codificador  = LabelEncoder()

tabela["profissao"] = codificador.fit_transform(tabela["profissao"])

tabela["mix_credito"] = codificador.fit_transform(tabela["mix_credito"])

tabela["comportamento_pagamento"] = codificador.fit_transform(tabela["comportamento_pagamento"])

display(tabela.info())

- - - - - - - - - - - - - - - --- - - -

# x é quem a IA pode usar para fazer previsão
# y é quem a IA tem que prever

x = tabela.drop(columns=["score_credito", "id_cliente"])
y = tabela["score_credito"]

from sklearn.model_selection import train_test_split

x_treino, x_teste, y_treino, y_teste = train_test_split(x, y, test_size=0.3)

 - - - - - - - - - - - - - - - - - - - - - -

# Criar um modelo de IA -> Nota de crédito: Ruim, Média ou Boa
#Arvore de Decisão -> RandomForest
#Neirest Neighbors -> KNN -> Vizinhos Próximos

# Importar a IA
from sklearn.ensemble import RandomForestClassifier
from sklearn.neighbors import KNeighborsClassifier

# Criar a IA
modelo_arvoredecisao = RandomForestClassifier()
modelo_knn = KNeighborsClassifier()

# Treinar a IA
modelo_arvoredecisao.fit(x_treino, y_treino)
modelo_knn.fit(x_treino, y_treino)

- - - - - - - - - - - - - - - - - - - - - - -

# Escolher o melhor modelo, com melhor accuracy

previsao_arvoredecisao = modelo_arvoredecisao.predict(x_teste)
previsao_knn = modelo_knn.predict(x_teste)

from sklearn.metrics import accuracy_score

display(accuracy_score(y_teste, previsao_arvoredecisao))
display(accuracy_score(y_teste, previsao_knn))

- - - - - - - - - - - - - - - - - - - - - - - -

# Usar o nosso modelo pra fazer novas previsões

# O modelo_arvoredecisao é o melhor modelo
# Importar novos clientes para prever

tabela_novos_clientes = pd.read_csv("novos_clientes.csv")
display(tabela_novos_clientes)
# Ajustar as colunas de texto

tabela_novos_clientes["profissao"] = codificador.fit_transform(tabela_novos_clientes["profissao"])
tabela_novos_clientes["mix_credito"] = codificador.fit_transform(tabela_novos_clientes["mix_credito"])
tabela_novos_clientes["comportamento_pagamento"] = codificador.fit_transform(tabela_novos_clientes["comportamento_pagamento"])

# Fazer previsoes - modelo_arvoredecisao

previsoes = modelo_arvoredecisao.predict(tabela_novos_clientes)


display(previsoes)








